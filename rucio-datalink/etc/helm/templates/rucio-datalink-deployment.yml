apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rucio-datalink 
  name: rucio-datalink
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-datalink
  template:
    metadata:
      labels:
        app: rucio-datalink
    spec:
      containers:
      - env:
        - name: DATA_MANAGEMENT_ENDPOINT
          value: "{{ .Values.dataManagementEndpoint }}"
        - name: DATA_MANAGEMENT_CLIENT_ID
          value: "{{ .Values.dataManagementClientId }}"
        - name: DATA_MANAGEMENT_CLIENT_SCOPES
          value: "{{ .Values.dataManagementClientScopes }}"
        - name: DATA_MANAGEMENT_CLIENT_AUDIENCE
          value: "{{ .Values.dataManagementClientAudience }}"
        - name: IVOA_AUTHORITY
          value: "{{ .Values.ivoaAuthority }}"
        - name: SERVICE_DATALINK_PORT
          value: "{{ .Values.service.datalink.port }}"
        - name: DATA_MANAGEMENT_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-data-management-client-config
              key: data-management-client-cfg-secret
        - name: SITE_CAPABILITIES_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-site-capabilities-client-config
              key: site-capabilities-client-cfg-secret
        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: rucio-datalink
        ports:
        - containerPort: {{ .Values.service.datalink.port }}
        resources: {}
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
      restartPolicy: Always
